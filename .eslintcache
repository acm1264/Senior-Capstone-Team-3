[{"/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/index.js":"1","/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/MuscleStructuresContainer.js":"2","/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/reportWebVitals.js":"3","/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/About.js":"4","/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/DBAccess.js":"5","/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/ExerciseDisplay.js":"6","/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/HeartMuscleStructure.js":"7","/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/FrontMuscleStructure.js":"8","/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/BackMuscleStructure.js":"9","/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/MuscleStructure.js":"10"},{"size":757,"mtime":1616517262479,"results":"11","hashOfConfig":"12"},{"size":761,"mtime":1614133980109,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1614133980130,"results":"14","hashOfConfig":"12"},{"size":676,"mtime":1614133980042,"results":"15","hashOfConfig":"12"},{"size":1830,"mtime":1616524609458,"results":"16","hashOfConfig":"12"},{"size":386,"mtime":1614133980069,"results":"17","hashOfConfig":"12"},{"size":7457,"mtime":1615927029164,"results":"18","hashOfConfig":"12"},{"size":20568,"mtime":1616527588733,"results":"19","hashOfConfig":"12"},{"size":33542,"mtime":1616527536460,"results":"20","hashOfConfig":"12"},{"size":3077,"mtime":1616526393396,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1smlw66",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},"/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/index.js",[],["44","45"],"/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/MuscleStructuresContainer.js",[],"/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/reportWebVitals.js",[],"/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/About.js",[],"/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/DBAccess.js",[],"/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/ExerciseDisplay.js",[],"/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/HeartMuscleStructure.js",[],"/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/FrontMuscleStructure.js",[],"/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/BackMuscleStructure.js",[],"/mnt/c/Users/acm12/Desktop/Senior-Capstone/visual-workout-planner/src/MuscleStructure.js",["46","47"],"import React, {useState} from 'react';\r\n// import DBAccess from './DBAccess';\r\nimport './MuscleStructure.css';\r\n\r\n//////////////test function called add delete me\r\nexport const add = (x, y) => x+y;\r\n\r\n// export const [exercises, setExercises] = useState();\r\nexport const GetExercises = async (muscleName) =>\r\n{\r\n    // const [exercises, setExercises] = useState();\r\n    const resp = await fetch('/api/get-muscle-ex-data')\r\n    const data = await resp.json()\r\n    console.log(data);// data;\r\n    // setExercises(data)\r\n\r\n    let exercisesToReturn = [];\r\n    data.forEach(exerciseObject => \r\n    {\r\n        if(exerciseObject.data.Primary_Muscle_Name == muscleName)\r\n        {\r\n            exercisesToReturn.push(exerciseObject.data);\r\n        }\r\n        // console.log(exerciseObject.data.Primary_Muscle_Name);\r\n        \r\n    });\r\n    return exercisesToReturn;\r\n}\r\n\r\n\r\n\r\n//muscles are shared between muslce structures in some cases. Because of this, this shared variable\r\n//will have whether or not each muscle is actively displaying exercie info or not so that if a muscle \r\n//shared between multiple structures is clicked, the state will be kept consistent\r\nlet muscleActiveState = {dict: {'Shoulder': false, 'Heart': false}};\r\n\r\n// function GetExercisesFromDB(muscleName)\r\n// {\r\n//     const [exercises, setExercises] = useState();\r\n//     const getExercises = async () => \r\n//     {\r\n//         const resp = await fetch('/api/get-muscle-ex-data')\r\n//         const data = await resp.json()\r\n//         setExercises(data)\r\n//     }\r\n// }\r\n\r\nexport class MuscleStructure extends React.Component\r\n{\r\n    MuscleOnClick = async (muscleName) =>\r\n    {\r\n        console.log(\"clicked \" + muscleName + \" is currenly \" + muscleActiveState[muscleName]);\r\n        muscleActiveState[muscleName] = !muscleActiveState[muscleName];\r\n        console.log(\"...now it is \" + muscleActiveState[muscleName]);\r\n\r\n        this.ReplaceCSSClass(muscleName);\r\n\r\n        console.log(muscleName);\r\n        let exercises = await GetExercises(muscleName);\r\n        console.log(\"exercises: \")\r\n        console.log(exercises);\r\n    };    \r\n\r\n    //function called after teh state of a msucle is changed to active or inactive to replace the active css class with teh\r\n    //inactive one, or vise versa\r\n    ReplaceCSSClass = (muscleName) =>\r\n    {\r\n        let a = document.getElementsByClassName(muscleName + 'Muscle');\r\n        for(let i = 0; i < a.length; i++)\r\n        {\r\n            console.log(\"muslce active now = \" + muscleActiveState[muscleName]);\r\n            a[i].classList.remove((muscleActiveState[muscleName] ? \"MuscleInactive\" : \"MuscleActive\"));\r\n            a[i].classList.add(muscleActiveState[muscleName] ? \"MuscleActive\" : \"MuscleInactive\");\r\n            \r\n        }\r\n        // a.forEach(x => console.log(x));\r\n        // a.forEach( x => x.className += (muscleActiveState[muscleName] ? \" MuscleActive\" : \" MuscleInactive\"));\r\n        // a.forEach( x => x.classList.remove((muscleActiveState[muscleName] ? \"MuscleInactive\" : \"MuscleActive\")) );\r\n    };\r\n};\r\nexport default MuscleStructure;",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":16,"nodeType":"54","messageId":"55","endLine":1,"endColumn":24},{"ruleId":"56","severity":1,"message":"57","line":20,"column":52,"nodeType":"58","messageId":"59","endLine":20,"endColumn":54},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]